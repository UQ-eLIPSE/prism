# Overview:
#
# To Run:
# ansible-playbook -i </path/to/inventory> <playbook>.yml

- name: Run e2e Tests
  hosts: zones

  tasks:
    - name: MongoDB restore test database - drop off
      command: |
        mongo prism_uat --eval "db.dropDatabase()"
      register: drop_result

    - name: Fail if dropping database failed
      fail:
        msg: "Failed to drop database. Error: {{ drop_result.stderr }}"
      when: drop_result.rc != 0

    - name: MongoDB restore test database - restore
      command: |
        mongorestore "prism_uat_v0"
      register: restore_result

    - name: Fail if restoring database failed
      fail:
        msg: "Failed to restore database. Error: {{ restore_result.stderr }}"
      when: restore_result.rc != 0

    - name: Run Cypress test
      vars:
        test_files:
          - MinimapUpdateTestA.cy.ts
          - NodeArrowTestA.cy.ts
          - MinimapUpdateTestB.cy.ts
          - TimelineUITest.cy.ts
          - NodeArrowTestB.cy.ts
          - EditNodePositionFormTest.cy.ts
          - InfospotTest.cy.ts
          - LogoTest.cy.ts
          - MarzipanoTest.cy.ts
          - NodeTest.cy.ts
          - MinimapTest.cy.ts
          - ScenenameTest.cy.ts
          - ToggleEditNodeButtonTest.cy.ts
      shell: |
        cd {{ localdir_client }} && \
        mkdir -p tmp/cypress-results && \
        {% for test_file in test_files %} 
        if yarn cypress:run:uat --spec cypress/e2e/{{ test_file }} --reporter junit --reporter-options "mochaFile=./tmp/cypress-results/{{ test_file | replace('.cy.ts', '') }}.xml,toConsole=true" | grep -q "<failure"; then
          echo "Test {{ test_file }} failed."
        else
          rm "./tmp/cypress-results/{{ test_file | replace('.cy.ts', '') }}.xml"
          echo "Test {{ test_file }} passed. No results saved." >> ./tmp/cypress-results/passedTests.txt
        fi
        {% endfor %}
      delegate_to: localhost
      ignore_errors: true
